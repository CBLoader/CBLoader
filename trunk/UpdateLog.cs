using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading;
using System.Xml.Linq;
namespace CharacterBuilderLoader
{
	internal class UpdateLog
	{
		private FileInfo[] parts;
		private string[] Header = new string[]
		{
			"<html><head>",
			"<!-- Insert folding div code -->",
			"</head><body>",
			"<h1>CBloader Update log</h1><br/>"
		};
		private string[] Footer = new string[]
		{
			"Generated by CBLoader at " + DateTime.Now.ToString(),
			"</body></html>"
		};
		internal void CreateAndShow(List<FileInfo> customFiles)
		{
			this.parts = (
				from f in customFiles
				orderby f.LastWriteTime
				select f).Reverse<FileInfo>().ToArray<FileInfo>();
			new Thread(new ThreadStart(this.Generate)).Start();
		}
		private void Generate()
		{
			string text = string.Concat(this.Header);
			bool flag = false;
			FileInfo[] array = this.parts;
			for (int i = 0; i < array.Length; i++)
			{
				FileInfo fileInfo = array[i];
				XDocument xDocument = XDocument.Load(fileInfo.FullName);
				XElement xElement = xDocument.Root.Element("Changelog");
				if (xElement != null)
				{
					flag = true;
					XElement xElement2 = xDocument.Root.Element("UpdateInfo");
					text = text + "\n<h3>" + fileInfo.Name;
					if (xElement2 != null)
					{
						text = text + " (Version " + xElement2.Element("Version").Value + ")";
					}
					text += "</h3>";
					text = text + "<div id=\"" + fileInfo.Name + "\"><ul>\n";
					string[] array2 = xElement.Value.Split(new char[]
					{
						'\n'
					});
					for (int j = 0; j < array2.Length; j++)
					{
						string text2 = array2[j];
						if (text2.Trim() != "")
						{
							text = text + "<li>" + text2 + "</li>\n";
						}
					}
					text += "</div>\n";
				}
			}
			text += string.Concat(this.Footer);
			File.WriteAllText(Path.Combine(FileManager.BasePath, "Changelog.html"), text);
			if (flag)
			{
				try
				{
					Process.Start(Path.Combine(FileManager.BasePath, "Changelog.html"));
				}
				catch (Exception)
				{
				}
			}
		}
	}
}

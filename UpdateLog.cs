using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading;
using System.Xml.Linq;
namespace CharacterBuilderLoader
{
	internal class UpdateLog
	{
		private FileInfo[] parts;
		private string[] Header = new string[]
		{
			"<html><head>",
			"<script>function Show(id) { document.getElementById('more' + id).style.display = \"Block\"; document.getElementById('show' + id).style.display = \"none\"; }</script>",
			"</head><body>",
			"<h1>CBloader Update log</h1><br/>"
		};
		private string[] Footer = new string[]
		{
			"Generated by CBLoader at " + DateTime.Now.ToString(),
			"</body></html>"
		};
        public static bool ShowChangelog = true;
		internal void CreateAndShow(List<FileInfo> customFiles)
		{
			this.parts = (
				from f in customFiles
				orderby f.LastWriteTime
				select f).Reverse<FileInfo>().ToArray<FileInfo>();
			new Thread(new ThreadStart(this.Generate)).Start();
		}
		private void Generate()
		{
			string html = string.Concat(this.Header);
			bool generated = false;
			FileInfo[] parts = this.parts;
			for (int i = 0; i < parts.Length; i++)
			{
				FileInfo fileInfo = parts[i];
				XDocument xDocument = XDocument.Load(fileInfo.FullName);
				XElement xElement = xDocument.Root.Element("Changelog");
				if (xElement != null)
				{
					generated = true;
					XElement updateInfo = xDocument.Root.Element("UpdateInfo");
					html = html + "\n<h3>" + fileInfo.Name;
					if (updateInfo != null)
					{
						html = html + " (Version " + updateInfo.Element("Version").Value + ")";
					}
					html += "</h3>";
					html = html + "<div id=\"" + fileInfo.Name + "\"><ul>\n";
					string[] changes = xElement.Value.Trim().Split(new char[]
					{
						'\n'
					}).Reverse().ToArray();

                    bool showmore = false;
					for (int j = 0; j < changes.Length; j++)
					{
                        if (j == 4)
                        {
                            showmore = true;
                            html = html + String.Format("<li id=\"show{0}\" onclick=\"Show({0});\"><i>Show More</i></li><div id=\"more{0}\" style=\"display:none;\">", i);
                        }
                        string text2 = changes[j];
						if (text2.Trim() != "")
						{
							html = html + "<li>" + text2 + "</li>\n";
						}
                        
					}
                    if (showmore)
                        html += "</div>";
					html += "</ul></div>\n";
				}
			}
			html += string.Concat(this.Footer);
			File.WriteAllText(Path.Combine(FileManager.BasePath, "Changelog.html"), html);
			if (generated)
			{
				try
				{
                    if (ShowChangelog)
    					Process.Start(Path.Combine(FileManager.BasePath, "Changelog.html"));
				}
				catch (Exception)
				{
				}
			}
		}
	}
}

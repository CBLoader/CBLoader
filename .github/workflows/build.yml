name: Build

on: [push, pull_request]
jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration:
          - Debug
          - Release
    steps:
    - uses: actions/checkout@v1
      with:
       submodules: true 
    - name: Setup Nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1
    - name: Restore packages
      run: nuget restore CBLoader.sln
    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1
    - name: Build with MSBuild
      run: msbuild -p:Configuration=${{ matrix.configuration }}
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: ${{ matrix.configuration }}
        # Directory containing files to upload
        path: CBLoader/bin/${{ matrix.configuration }}/
  publish:
    runs-on: windows-latest
    needs: build
    if: startswith(github.ref, 'v1')
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Release.zip
        asset_name: Release.zip
        asset_content_type: application/zip
